worker_processes auto;

events {

	worker_connections 1024;
	use epoll;
	multi_accept on;
}

http {

	tcp_nodelay on;
	# this is necessary for us to be able to disable request buffering in all cases
	proxy_http_version 1.1;

	upstream semaphore_api {

		server semaphore_api:3000;
	}

	server {

		listen 443 ssl;
		server_name example.com;

		# Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
		ssl_certificate /etc/nginx/cert/semaphore.crt;
		ssl_certificate_key /etc/nginx/cert/semaphore.key;
		ssl_protocols TLSv1.1 TLSv1.2;
		ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
		ssl_prefer_server_ciphers on;
		ssl_session_cache shared:SSL:10m;
		# disable any limits to avoid HTTP 413 for large image uploads
		client_max_body_size 0;
		# required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
		chunked_transfer_encoding on;

		location / {

			proxy_pass http://semaphore_api/;
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_buffering off;
			proxy_request_buffering off;
		}
	}
	server {

		listen 80;
		server_name example.com;

    rewrite ^/(.*) https://$http_host$1 permanent;
		#return 301 https://$http_host$request_uri;

		# 1. $host contains "in this order of precedence: host name from the request line, or host name from the 'Host' request header field, or the server name matching a request".
		# 2. $http_host contains the content of the HTTP "Host" header field, if it was present in the request.
		# 3. $server_name contains the server_name of the virtual host which processed the request, as it was defined in the nginx configuration. If a server contains multiple server_names, only the first one will be present in this variable.
	}
}
